'\" t
.\"     Title: PIA
.\"    Author: [see the "AUTHORS" section]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 2015-12-01
.\"    Manual: Library Functions Manual
.\"    Source: pia
.\"  Language: English
.\"
.TH "PIA" "3" "2015\-12\-01" "pia" "Library Functions Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
pia \- calculate the area of intersection of polygons
.SH "SYNOPSIS"
.sp
.ft B
.nf
#include <pia\&.h>
.fi
.ft
.HP \w'float\ pia_area('u
.BI "float pia_area(point_t\ " "a" ", size_t\ " "na" ", point_t\ " "b" ", size_t\ " "nb" ");"
.SH "DESCRIPTION"
.PP
When passed a pair of polygons, specified as arrays of
\fBpoint_t\fR
(and their lengths), calculates their area of intersection\&.
.PP
The method of calculation reduces the area integration to a boundary integration using Green\*(Aqs theorem; this is the same principle as is used in the planimeter\&.
.SH "RETURN VALUE"
.PP
Returns the area of intersection of the polygons as a float\&.
.SH "AUTHORS"
.PP
The design of the algorithm and its implementation for GCC is due to Norman Hardy (see Hardy\*(Aqs
\m[blue]\fBCap Lore\fR\m[]\&\s-2\u[1]\d\s+2
site for further details)\&.
.PP
This implementation in C99 is by J\&.J\&. Green\&.
.SH "NOTES"
.IP " 1." 4
Cap Lore
.RS 4
\%http://www.cap-lore.com/MathPhys/IP/
.RE
